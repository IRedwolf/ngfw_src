#!/usr/bin/env python

# More awful parsing to get IPsec tunnel details.  Here we use the ipsec
# statusall command to get info about a specific tunnel.  We dig through
# the results to find the bytes_i and bytes_o values, and return those
# to the caller via stdout.  Since the search tokens come after the
# corresponding values, we track the search index so we can look at
# the previous token when we find what we are looking for.

import subprocess
import sys

if (len(sys.argv) < 2):
    raise Exception("Invalid number of arguments")

status_proc = subprocess.Popen("/usr/sbin/ipsec statusall " + sys.argv[1], stdout=subprocess.PIPE, shell=True)
(status_out,status_err) = status_proc.communicate()

wordlist = status_out.split()
ivalue = "error"
ovalue = "error"
index = 0

for token in wordlist:
	
    if (token.startswith("bytes_i") == True):
        ivalue = wordlist[index - 1]

    if (token.startswith("bytes_o") == True):
        ovalue = wordlist[index - 1]
	
    index += 1

print "| TUNNEL:%s IN:%s OUT:%s |" % (sys.argv[1] , ivalue , ovalue)
